; -*- mode: clojure; -*-
; vim: filetype=clojure

(logging/init {:file "riemann.log" :console true})

(let [host "0.0.0.0"]
  (tcp-server  {:host host}))

(periodically-expire 5)

(def email
  (mailer {:host "172.22.3.4"
           :from "brad-riemann@example.com"}))

(def tell-brad
  "See http://riemann.io/howto.html#roll-up-and-throttle-events"
  (throttle 1000 10
    (rollup 1 10
      (email "brad-riemann@example.com"))))


; send one test email when Riemann server starts
((email "brad-riemann-test@example.com") (event {:service "riemann email test" :metric 0}))

(let [index (default :ttl 300 (index))]
  (streams
    (where (not (service #"^riemann "))
           index)))

(streams
  (where
    (host #"^main electrical panel$")
    (expired tell-brad #(warn %))
    (changed-state {:init "ok"} tell-brad #(info %))))

(streams
  (where (not (service #"^riemann "))
    (clock-skew
      (where (> (java.lang.Math/abs metric) 0.01)
        (adjust [:service str " - CLOCK SKEW DETECTED"]
          #(info %))))))
